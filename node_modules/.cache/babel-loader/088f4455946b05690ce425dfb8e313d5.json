{"ast":null,"code":"var _jsxFileName = \"/Users/vietqnguyen/Desktop/React/17-react-auth/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingTime = adjExpirationTime - currentTime;\n  return remainingTime;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 60000) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialtoken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialtoken);\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  const contextValue = {\n    token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"8Z+xymL8tC80LQ37+XZWS5pem6s=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/vietqnguyen/Desktop/React/17-react-auth/src/store/auth-context.js"],"names":["React","useState","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingTime","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","removeItem","duration","AuthContextProvider","props","initialtoken","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAIC,WAAJ;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACpCC,EAAAA,KAAK,EAAE,EAD6B;AAEpCC,EAAAA,UAAU,EAAE,KAFwB;AAGpCC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHgB;AAIpCG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJoB,CAApB,CAApB;;AAOA,MAAMC,sBAAsB,GAAIC,cAAD,IAAoB;AAC/C,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAA1B;AACA,QAAME,aAAa,GAAGD,iBAAiB,GAAGH,WAA1C;AACA,SAAOI,aAAP;AACH,CALD;;AAOA,MAAMC,mBAAmB,GAAG,MAAM;AAC9B,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,QAAMC,oBAAoB,GAAGF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAA7B;AAEA,QAAMJ,aAAa,GAAGN,sBAAsB,CAACW,oBAAD,CAA5C;;AAEA,MAAIL,aAAa,IAAI,KAArB,EAA4B;AACxBG,IAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB;AACAH,IAAAA,YAAY,CAACG,UAAb,CAAwB,gBAAxB;AACA,WAAO,IAAP;AACH;;AAED,SAAO;AACHhB,IAAAA,KAAK,EAAEY,WADJ;AAEHK,IAAAA,QAAQ,EAAEP;AAFP,GAAP;AAIH,CAhBD;;AAiBA,OAAO,MAAMQ,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAMC,YAAY,GAAGP,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAACd,KAAD,EAAQqB,QAAR,IAAoBzB,QAAQ,CAACwB,YAAD,CAAlC;AAEA,QAAME,cAAc,GAAG,CAAC,CAACtB,KAAzB;;AAEA,QAAMuB,aAAa,GAAG,MAAM;AACxBF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAR,IAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB;;AAEA,QAAInB,WAAJ,EAAiB;AACb2B,MAAAA,YAAY,CAAC3B,WAAD,CAAZ;AACH;AACJ,GAPD;;AASA,QAAM4B,YAAY,GAAG,CAACzB,KAAD,EAAQK,cAAR,KAA2B;AAC5CgB,IAAAA,QAAQ,CAACrB,KAAD,CAAR;AACAa,IAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8B1B,KAA9B;AACAa,IAAAA,YAAY,CAACa,OAAb,CAAqB,gBAArB,EAAuCrB,cAAvC;AACA,UAAMK,aAAa,GAAGN,sBAAsB,CAACC,cAAD,CAA5C;AACAR,IAAAA,WAAW,GAAG8B,UAAU,CAACJ,aAAD,EAAgBb,aAAhB,CAAxB;AAEH,GAPD;;AASA,QAAMkB,YAAY,GAAG;AACjB5B,IAAAA,KADiB;AAEjBC,IAAAA,UAAU,EAAEqB,cAFK;AAGjBpB,IAAAA,KAAK,EAAEuB,YAHU;AAIjBtB,IAAAA,MAAM,EAAEoB;AAJS,GAArB;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEK,YAA7B;AAAA,cACKT,KAAK,CAACU;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnCM;;GAAMX,mB;;KAAAA,mB;AAqCb,eAAepB,WAAf","sourcesContent":["import React, { useState } from \"react\";\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n    token: '',\n    isLoggedIn: false,\n    login: (token) => {},\n    logout: () => {}\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n    const currentTime = new Date().getTime();\n    const adjExpirationTime = new Date(expirationTime).getTime();\n    const remainingTime = adjExpirationTime - currentTime;\n    return remainingTime;\n}\n\nconst retrieveStoredToken = () => {\n    const storedToken = localStorage.getItem('token');\n    const storedExpirationDate = localStorage.getItem('expirationTime');\n\n    const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n    if (remainingTime <= 60000) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('expirationTime');\n        return null;\n    }\n\n    return {\n        token: storedToken,\n        duration: remainingTime\n    }\n}\nexport const AuthContextProvider = (props) => {\n    const initialtoken = localStorage.getItem('token');\n    const [token, setToken] = useState(initialtoken);\n\n    const userIsLoggedIn = !!token;\n\n    const logoutHandler = () => {\n        setToken(null);\n        localStorage.removeItem('token');\n\n        if (logoutTimer) {\n            clearTimeout(logoutTimer)\n        }\n    };\n\n    const loginHandler = (token, expirationTime) => {\n        setToken(token);\n        localStorage.setItem('token', token);\n        localStorage.setItem('expirationTime', expirationTime);\n        const remainingTime = calculateRemainingTime(expirationTime);\n        logoutTimer = setTimeout(logoutHandler, remainingTime);\n        \n    };\n\n    const contextValue = {\n        token,\n        isLoggedIn: userIsLoggedIn,\n        login: loginHandler,\n        logout: logoutHandler\n    }\n    return (\n        <AuthContext.Provider value={contextValue}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}